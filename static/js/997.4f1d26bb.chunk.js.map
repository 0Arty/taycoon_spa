{"version":3,"file":"static/js/997.4f1d26bb.chunk.js","mappings":"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","sources":["webpack://taycoon-spa/./src/components/pages/certificates/Certificates.module.scss?46ad","webpack://taycoon-spa/./src/components/pages/certificates/content/Content.module.scss?f057","webpack://taycoon-spa/./src/components/pages/certificates/content/imagePopUp/ImagePopUp.module.scss?f711","components/pages/certificates/content/imagePopUp/ImagePopUp.jsx","components/pages/certificates/content/Content.jsx","components/pages/certificates/Certificates.jsx","webpack://taycoon-spa/./src/components/reusable/BGImage/BgImage.module.scss?1132","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","components/reusable/BGImage/BgImage.jsx","../node_modules/src/useInView.tsx","webpack://taycoon-spa/./src/components/reusable/footer/about/About.module.scss?fdc5","components/reusable/footer/about/About.jsx","webpack://taycoon-spa/./src/components/reusable/footer/Footer.module.scss?b58f","webpack://taycoon-spa/./src/components/reusable/footer/info/Info.module.scss?f6b6","components/reusable/footer/info/Info.jsx","webpack://taycoon-spa/./src/components/reusable/footer/links/Links.module.scss?8db5","components/reusable/footer/links/Links.jsx","components/reusable/footer/Footer.jsx","webpack://taycoon-spa/./src/components/reusable/menu/MenuComponent.module.scss?29fb","components/reusable/menu/MenuComponent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Certificates_box__i17cU\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Content_container__E+qyq\",\"wrapper\":\"Content_wrapper__QsYWM\",\"box\":\"Content_box__+O9nD\",\"image\":\"Content_image__X5Kni\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ImagePopUp_container__MYZ1J\",\"box\":\"ImagePopUp_box__rS4P2\",\"image\":\"ImagePopUp_image__tyyOh\"};","import style from \"./ImagePopUp.module.scss\"\r\n\r\nconst ImagePopUp = ({ image, closePopUp }) => {\r\n\r\n    return (\r\n            <div\r\n                className={style.container}\r\n                onClick={() => { closePopUp(false) }}\r\n            >\r\n                <div className={style.box}>\r\n                    <img src={image} alt=\"\" className={style.image} />\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default ImagePopUp;\r\n","import style from \"./Content.module.scss\"\r\nimport image1 from '../../../../assets/certificates/certificates/certificate_ISO_DSTU_p1.jpg'\r\nimport image2 from '../../../../assets/certificates/certificates/certificate_ISO_DSTU_p2.jpg'\r\nimport image3 from '../../../../assets/certificates/certificates/certificate_ISO_eng_p1.jpg'\r\nimport image4 from '../../../../assets/certificates/certificates/certificate_ISO_eng_p2.jpg'\r\nimport image5 from '../../../../assets/certificates/certificates/certificate_ISO_ua_p1.jpg'\r\nimport image6 from '../../../../assets/certificates/certificates/certificate_ISO_ua_p2.jpg'\r\nimport image7 from '../../../../assets/certificates/certificates/consulting_addivities_2013_p1.jpg'\r\nimport image8 from '../../../../assets/certificates/certificates/consulting_addivities_2013_p2.jpg'\r\nimport image9 from '../../../../assets/certificates/certificates/consulting_dyes_2015_p1.jpg'\r\nimport image10 from '../../../../assets/certificates/certificates/consulting_dyes_2015_p2.jpg'\r\nimport image11 from '../../../../assets/certificates/certificates/consulting_mesh_2015_p1.jpg'\r\nimport image12 from '../../../../assets/certificates/certificates/consulting_mesh_2015_p2.jpg'\r\nimport image13 from '../../../../assets/certificates/certificates/san_vegetables_p1.jpg'\r\nimport image14 from '../../../../assets/certificates/certificates/san_vegetables_p2.jpg'\r\nimport { useState } from \"react\"\r\nimport ImagePopUp from \"./imagePopUp/ImagePopUp\"\r\n\r\n\r\n\r\nconst Content = ({ props }) => {\r\n\r\n    const arrayCertificates = [\r\n        image1, image2, image3, image4, image5,\r\n        image6, image7, image8, image9, image10,\r\n        image11, image12, image13, image14\r\n    ]\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [index, setIndex] = useState(null)\r\n\r\n    const openPopUphandler = (index) =>{\r\n        setIsOpen((prev)=> !prev)\r\n        setIndex(index)\r\n    }\r\n   \r\n    return (\r\n        <div className={style.container}>\r\n            {isOpen && \r\n                <ImagePopUp image={arrayCertificates[index]} closePopUp={setIsOpen}/>\r\n            }\r\n\r\n            <div className = {style.wrapper}>\r\n\r\n                {\r\n                    arrayCertificates.map((certificate, index) => {\r\n                        return (\r\n                            <div className={style.box} key={index}>\r\n                                <img src={certificate} alt=\"\" className={style.image} onClick={()=>{openPopUphandler(index)}}/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Content;\r\n","import MenuComponent from \"../../reusable/menu/MenuComponent\";\r\nimport style from \"./Certificates.module.scss\"\r\nimport image from '../../../assets/certificates/main.png'\r\nimport Footer from \"../../reusable/footer/Footer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport Content from \"./content/Content\";\r\n\r\n\r\n\r\nconst Certificates = ({ props }) => {\r\n\r\n    const { t } = useTranslation()\r\n    const refPage = useRef(null)\r\n    useEffect(() => refPage.current?.scrollIntoView({ block: 'start', behavior: 'smooth' }), [])\r\n\r\n    return (\r\n        <div className={style.box} ref={refPage}>\r\n            <MenuComponent image={image} alt={''} heading={'Taycoon'} title={t('certificates.title') } />\r\n            <Content />\r\n            <Footer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Certificates;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"BgImage_image__cRBR9\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import style from \"./BgImage.module.scss\"\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst ImageComponent = ({ img, alt }) => {\r\n    const { ref, inView } = useInView({\r\n        treshold: 0.5,\r\n    })\r\n\r\n    return (\r\n        <div className={style.image} ref={ref}>\r\n          {inView ? <img src={img} alt={alt} /> : null} \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImageComponent;\r\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"About_box__MPmxR\",\"link\":\"About_link__1DqRl\"};","import { useTranslation } from \"react-i18next\";\r\nimport style from \"./About.module.scss\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { routes } from \"../../../../routes\";\r\n\r\nconst About = ({ props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className={style.box}>\r\n      <ul>\r\n        <li>\r\n          <Link className={style.link} to={routes.ABOUT}>\r\n            <h5>{t('footer.about.about company')}</h5>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className={style.link} to={routes.CERTIFICATES}>\r\n            <h5>{t('footer.about.certificates')}</h5>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className={style.link} to={routes.CLIENTS}>\r\n            <h5>{t('footer.about.our partners')}</h5>\r\n          </Link>\r\n        </li>\r\n\r\n\r\n\r\n      </ul>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default About;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Footer_box__sNEyf\",\"content\":\"Footer_content__BLpMK\",\"wrapper\":\"Footer_wrapper__H9pR1\",\"copyright\":\"Footer_copyright__r-8DN\"};","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Info_box__S4Ylb\"};","import style from \"./Info.module.scss\"\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Info = ({props}) => {\r\nconst {t} = useTranslation()\r\n  return (\r\n    <div className = {style.box}>\r\n        <h5>officetaycoon@gmail.com</h5>\r\n        <h5>+38 067 371-48-45</h5>\r\n        <h5>+38 067 401-60-52</h5>\r\n        <h5>+38 097 170-96-00</h5>\r\n        <h5>{t('footer.info.addres')}</h5>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Info;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Links_box__iIaWF\",\"link\":\"Links_link__RG7LH\"};","import { useTranslation } from \"react-i18next\";\r\nimport style from \"./Links.module.scss\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { routes } from \"../../../../routes\";\r\n\r\nconst Links = ({ props }) => {\r\n\r\n    const { t } = useTranslation()\r\n    \r\n    return (\r\n\r\n        <div className={style.box}>\r\n            <h5>\r\n                <Link to={routes.MASTERBATCH} className={style.link}>\r\n                    {\r\n                        t('footer.links.masterbatch')\r\n                    }\r\n                </Link>\r\n            </h5>\r\n            <h5>\r\n                <Link to={routes.PACKING_NET} className={style.link}>\r\n                    {\r\n                       t('footer.links.net')\r\n                    }\r\n                </Link>\r\n            </h5>\r\n            <h5>\r\n                <Link to={routes.ADDITIVES} className={style.link}>\r\n                    {\r\n                       t('footer.links.addtions')\r\n                    }\r\n                </Link>\r\n            </h5>\r\n            <h5>\r\n                <Link to={routes.COMPOSITES} className={style.link}>\r\n                    {\r\n                         t('footer.links.composites')\r\n                    }\r\n                </Link>\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Links;\r\n","import About from \"./about/About\";\r\nimport style from \"./Footer.module.scss\"\r\nimport Info from \"./info/Info\";\r\nimport Links from \"./links/Links\";\r\n\r\nconst Footer = ({ props }) => {\r\n\r\n    return (\r\n        <footer className={style.box}>\r\n            <div className={style.content}>\r\n                <div className={style.wrapper}>\r\n                    <Links />\r\n                    <Info />\r\n                    <About />\r\n                </div>\r\n                <div className={style.copyright}>\r\n                    <span>© 2019 - {new Date().getFullYear()} taycoon.com.ua</span>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"MenuComponent_box__1BwLx\",\"image\":\"MenuComponent_image__zSLJ9\",\"container\":\"MenuComponent_container__7kKIZ\"};","import ImageComponent from \"../BGImage/BgImage\";\r\nimport style from \"./MenuComponent.module.scss\"\r\n\r\nconst MenuComponent = ({ image, alt, heading, title }) => {\r\n\r\n    return (\r\n        <div className={style.box}>\r\n            <ImageComponent img={image} alt={alt} />\r\n            <div className = {style.container}>\r\n            <h3>{heading}</h3>\r\n            <h4>{title}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default MenuComponent;\r\n\r\n"],"names":["_ref","image","closePopUp","_jsx","className","style","onClick","children","src","alt","props","arrayCertificates","image1","image2","image3","image4","image5","image6","image7","image8","image9","image10","image11","image12","image13","image14","isOpen","setIsOpen","useState","index","setIndex","_jsxs","ImagePopUp","map","certificate","prev","openPopUphandler","t","useTranslation","refPage","useRef","useEffect","_refPage$current","current","scrollIntoView","block","behavior","ref","MenuComponent","heading","title","Content","Footer","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","concat","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","img","delay","rootMargin","triggerOnce","skip","initialInView","onChange","setRef","React2","state","setState","entryTarget","previousEntryTarget","result","useInView","treshold","Link","to","routes","ABOUT","CERTIFICATES","CLIENTS","MASTERBATCH","PACKING_NET","ADDITIVES","COMPOSITES","Links","Info","About","Date","getFullYear","ImageComponent"],"sourceRoot":""}