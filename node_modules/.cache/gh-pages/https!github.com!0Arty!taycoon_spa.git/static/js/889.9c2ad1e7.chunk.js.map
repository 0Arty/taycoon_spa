{"version":3,"file":"static/js/889.9c2ad1e7.chunk.js","mappings":"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","sources":["../node_modules/classnames/index.js","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","LayoutGroupContext","createContext","PresenceContext","Queue","constructor","this","order","scheduled","Set","add","process","has","remove","index","indexOf","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","addToCurrentFrame","undefined","queue","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}